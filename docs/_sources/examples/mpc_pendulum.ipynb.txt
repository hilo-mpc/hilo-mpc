{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# Inverted pendulum - DAE System\n",
    "\n",
    "## Introduction\n",
    "\n",
    "This example shows the simulation and control of an inverted pendulum on a cart. We are going to use this example to show how your can add algebraic equations to the model\n",
    "\n",
    "\n",
    "![Pendulum](../images/pendulum.png)\n",
    "\n",
    "The differential algebraic system of the inverted pendulum is given by the following equations:\n",
    "\n",
    "## Model\n",
    "$$\n",
    "\\begin{align}\n",
    "        \\dot{x}       &= v \\\\\n",
    "        \\dot{v}       &= \\frac{(3/4mg\\sin(\\theta)\\cos(\\theta) - 1/2ml\\sin(\\theta)\\omega^2 + F)}{(M + m - 3/4m\\cos(\\theta)^2)} \\\\\n",
    "        \\dot{\\theta} &= \\omega\\\\\n",
    "        \\dot{\\omega} &= \\frac{3}{(2l)}  (\\dot{v}\\cos(\\theta) + g\\sin(\\theta))\\\\\n",
    "        y =& h + l\\cos(theta)\n",
    "\\end{align}\n",
    "$$\n",
    "\n",
    "The differential and algebraic states are:\n",
    "\n",
    "\n",
    "- $x$:      x-Position of the mass M        [m]\n",
    "- $v$:      Linear velocity of the mass M   [m/s]\n",
    "- $\\theta$:  Angle of the metal rod          [rad]\n",
    "- $\\omega$:  Angular velocity of the mass m  [rad/s]\n",
    "- $y$:      y-Position of the mass M        [m]\n",
    "\n",
    "\n",
    "The inputs that could be applied to control the system are:\n",
    "\n",
    "- $F$:  Force applied to the cart   [kg*m/s^2]\n",
    "\n",
    "The constants of the system are:\n",
    "\n",
    "- $M$:  Mass of the cart                [kg]\n",
    "- $m$:  Mass of the pendulum            [kg]\n",
    "- $l$:  Length of the lever arm         [m]\n",
    "- $h$:  Height of the rod connection    [m]\n",
    "- $g$:  Gravitational acceleration      [m/s^2]\n",
    "    \n",
    "## Objective\n",
    "The objective is to stabilize the weight attached to the rod at $\\theta = 0$ and keep the cart still i.e. $v=0$.\n",
    "The control problem is the following: \n",
    "$$\n",
    "\\begin{align}\n",
    "        &\\!\\max_{\\mathbf{u}(\\cdot)}&\\qquad& \\sum_{i=1}^{N}10 v(t_i)^2 + 5 \\theta(t_i)^2 + 0.1F(t_i)^2  + 10v(t_{N+1})^2 + 5\\theta(t_{N+1})^2 \\\\\n",
    "        &\\text{s.t.}&&\\dot{x}=f(x,u),\\quad x(0)=x_0\\\\\n",
    "        &&&x \\in [x_{lb}, x_{ub}], \\,\\ u \\in [u_{lb}, u_{ub}].\n",
    "\\end{align}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Modelling with Neo\n",
    "Neo can solve use model containing differential algebraic equations (DAEs). These can be added created in three steps:\n",
    "\n",
    "1. Create the algebraic variables with the `set_algebraic_variables` method\n",
    "2. Use the algebraic variables in the model.\n",
    "3. Add the algebraic equations using the `set_algebraic_equations` method. Note that the algebraic equations must be in the form $g(x,z)=0$\n",
    "\n",
    "Remember to give an initial guess for the algebraic variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solver 'cvodes' is not suitable for DAE systems. Switching to 'idas'...\n"
     ]
    }
   ],
   "source": [
    "# Add HILO-MPC to path. NOT NECESSARY if it was installed via pip.\n",
    "import sys\n",
    "sys.path.append('../../../')\n",
    "\n",
    "from hilo_mpc import NMPC, Model\n",
    "import casadi as ca\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "model = Model(plot_backend='bokeh')\n",
    "\n",
    "# Constants\n",
    "M = 5.\n",
    "m = 1.\n",
    "l = 1.\n",
    "h = .5\n",
    "g = 9.81\n",
    "\n",
    "# States and algebraic variables\n",
    "x = model.set_dynamical_states(['x', 'v', 'theta', 'omega'])\n",
    "model.set_measurements(['yx', 'yv', 'ytheta', 'tomega'])\n",
    "model.set_measurement_equations([x[0], x[1], x[2], x[3]])\n",
    "y = model.set_algebraic_states(['y'])\n",
    "\n",
    "# Unwrap states\n",
    "v = x[1]\n",
    "theta = x[2]\n",
    "omega = x[3]\n",
    "\n",
    "# Define inputs\n",
    "F = model.set_inputs('F')\n",
    "\n",
    "# ODEs\n",
    "dd = ca.SX.sym('dd', 4)\n",
    "dd[0] = v\n",
    "dd[1] = 1. / (M + m - m * ca.cos(theta)) * (m * g * ca.sin(theta) - m * l * ca.sin(theta) * omega ** 2 + F)\n",
    "dd[2] = omega\n",
    "dd[3] = 1. / l * (dd[1] * ca.cos(theta) + g * ca.sin(theta))\n",
    "\n",
    "\n",
    "# Algebraic equations (note that it is written in the form rhs = 0)\n",
    "rhs = h + l * ca.cos(theta) - y\n",
    "\n",
    "# Add differential equations\n",
    "model.set_dynamical_equations(dd)\n",
    "\n",
    "# Add algebraic equations\n",
    "model.set_algebraic_equations(rhs)\n",
    "\n",
    "# Initial conditions\n",
    "x0 = [2.5, 0., 0.1, 0.]\n",
    "\n",
    "\n",
    "# Initial guess algebraic states\n",
    "z0 = h + l * ca.cos(x0[2]) - h\n",
    "#Initial guess input\n",
    "u0 = 0.\n",
    "\n",
    "# Setup the model\n",
    "dt = .1\n",
    "model.setup(dt=dt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Alternativelly you can define the model more compactly in string form. HILO-MPC will parse it for you"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# model = Model(plot_backend='bokeh')\n",
    "\n",
    "# # Define system\n",
    "# equations = \"\"\"\n",
    "# # Constants\n",
    "# M = 5\n",
    "# m = 1\n",
    "# l = 1\n",
    "# h = 0.5\n",
    "# g = 9.81\n",
    "\n",
    "# # DAE\n",
    "# dx(t)/dt = v(t)\n",
    "# dv(t)/dt = 1/(M + m - 3/4*m*cos(theta(t))^2) * (3/4*m*g*sin(theta(t))*cos(theta(t)) ...\n",
    "# - 1/2*m*l*sin(theta(t))*omega(t)^2 + F(k))\n",
    "# d/dt(theta(t)) = omega(t)\n",
    "# d/dt(omega(t)) = 3/(2*l) * (dv(t)/dt*cos(theta(t)) + g*sin(theta(t)))\n",
    "# 0 = h + l*cos(theta(t)) - y(t)\n",
    "# \"\"\"\n",
    "# model.set_equations(equations)\n",
    "\n",
    "# # Setup model\n",
    "# model.setup(dt=dt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## NMPC with Neo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "******************************************************************************\n",
      "This program contains Ipopt, a library for large-scale nonlinear optimization.\n",
      " Ipopt is released as open source code under the Eclipse Public License (EPL).\n",
      "         For more information visit http://projects.coin-or.org/Ipopt\n",
      "******************************************************************************\n",
      "\n"
     ]
    }
   ],
   "source": [
    "nmpc = NMPC(model)\n",
    "\n",
    "nmpc.quad_stage_cost.add_states(names=['v', 'theta'], ref=[0, 0], weights=[10, 5])\n",
    "\n",
    "nmpc.quad_stage_cost.add_inputs(names='F', weights=0.1)\n",
    "\n",
    "nmpc.horizon = 25\n",
    "\n",
    "nmpc.set_box_constraints(x_ub=[5, 10, 10, 10], x_lb=[-5, -10, -10, -10])\n",
    "\n",
    "nmpc.set_initial_guess(x_guess=x0, u_guess=u0)\n",
    "\n",
    "nmpc.setup(options={'print_level': 0})\n",
    "\n",
    "n_steps = 100\n",
    "\n",
    "model.set_initial_conditions(x0=x0, z0=z0)\n",
    "\n",
    "sol = model.solution\n",
    "\n",
    "for step in range(n_steps):\n",
    "    u = nmpc.optimize(x0)\n",
    "    model.simulate(u=u, steps=1)\n",
    "    x0 = sol['x:f']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plots\n",
    "Here the results. The plotting will be automatize such that you can quickly get the plots without writing much."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"1003\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"1003\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.1.min.js\": \"YF85VygJKMVnHE+lLv2AM93Vbstr0yo2TbIu5v8se5Rq3UQAUmcuh4aaJwNlpKwa\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.1.min.js\": \"KKuas3gevv3PvrlkyCMzffFeaMq5we/a2QsP5AUoS3mJ0jmaCL7jirFJN3GoE/lM\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.1.min.js\": \"MK/uFc3YT18pkvvXRl66tTHjP0/dxoSH2e/eiNMFIguKlun2+WVqaPTWmUy/zvh4\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.1.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.1.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.1.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1003\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.1.min.js\": \"YF85VygJKMVnHE+lLv2AM93Vbstr0yo2TbIu5v8se5Rq3UQAUmcuh4aaJwNlpKwa\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.1.min.js\": \"KKuas3gevv3PvrlkyCMzffFeaMq5we/a2QsP5AUoS3mJ0jmaCL7jirFJN3GoE/lM\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.1.min.js\": \"MK/uFc3YT18pkvvXRl66tTHjP0/dxoSH2e/eiNMFIguKlun2+WVqaPTWmUy/zvh4\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.1.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.1.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.1.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1003\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"3b41d707-17a2-448d-9457-880d06cb2c26\" data-root-id=\"1293\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"1d5ca094-7d1d-4a8c-922b-3d5cbaa9214c\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"children\":[{\"id\":\"1292\"},{\"id\":\"1290\"}]},\"id\":\"1293\",\"type\":\"Column\"},{\"attributes\":{},\"id\":\"1207\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1221\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1048\",\"type\":\"Selection\"},{\"attributes\":{\"overlay\":{\"id\":\"1212\"}},\"id\":\"1208\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1198\"}],\"center\":[{\"id\":\"1201\"},{\"id\":\"1205\"},{\"id\":\"1236\"}],\"height\":300,\"left\":[{\"id\":\"1202\"}],\"renderers\":[{\"id\":\"1223\"}],\"title\":{\"id\":\"1225\"},\"toolbar\":{\"id\":\"1213\"},\"toolbar_location\":null,\"width\":300,\"x_range\":{\"id\":\"1190\"},\"x_scale\":{\"id\":\"1194\"},\"y_range\":{\"id\":\"1192\"},\"y_scale\":{\"id\":\"1196\"}},\"id\":\"1189\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1070\"},{\"id\":\"1071\"},{\"id\":\"1072\"},{\"id\":\"1073\"},{\"id\":\"1074\"},{\"id\":\"1075\"}]},\"id\":\"1077\",\"type\":\"Toolbar\"},{\"attributes\":{\"overlay\":{\"id\":\"1076\"}},\"id\":\"1072\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1209\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"AAAAAAAAAACamZmZmZm5P5qZmZmZmck/NDMzMzMz0z+amZmZmZnZPwAAAAAAAOA/MzMzMzMz4z9mZmZmZmbmP5mZmZmZmek/zMzMzMzM7D/////////vP5mZmZmZmfE/MzMzMzMz8z/NzMzMzMz0P2dmZmZmZvY/AQAAAAAA+D+bmZmZmZn5PzUzMzMzM/s/z8zMzMzM/D9pZmZmZmb+PwEAAAAAAABAzszMzMzMAECbmZmZmZkBQGhmZmZmZgJANTMzMzMzA0ACAAAAAAAEQM/MzMzMzARAnJmZmZmZBUBpZmZmZmYGQDYzMzMzMwdAAwAAAAAACEDQzMzMzMwIQJ2ZmZmZmQlAamZmZmZmCkA3MzMzMzMLQAQAAAAAAAxA0czMzMzMDECemZmZmZkNQGtmZmZmZg5AODMzMzMzD0ACAAAAAAAQQGhmZmZmZhBAzszMzMzMEEA0MzMzMzMRQJqZmZmZmRFAAAAAAAAAEkBmZmZmZmYSQMzMzMzMzBJAMjMzMzMzE0CYmZmZmZkTQP7//////xNAZGZmZmZmFEDKzMzMzMwUQDAzMzMzMxVAlpmZmZmZFUD8//////8VQGJmZmZmZhZAyMzMzMzMFkAuMzMzMzMXQJSZmZmZmRdA+v//////F0BgZmZmZmYYQMbMzMzMzBhALDMzMzMzGUCSmZmZmZkZQPj//////xlAXmZmZmZmGkDEzMzMzMwaQCozMzMzMxtAkJmZmZmZG0D2//////8bQFxmZmZmZhxAwszMzMzMHEAoMzMzMzMdQI6ZmZmZmR1A9P//////HUBaZmZmZmYeQMDMzMzMzB5AJjMzMzMzH0CMmZmZmZkfQPL//////x9ALDMzMzMzIEBfZmZmZmYgQJKZmZmZmSBAxczMzMzMIED4//////8gQCszMzMzMyFAXmZmZmZmIUCRmZmZmZkhQMTMzMzMzCFA9///////IUAqMzMzMzMiQF1mZmZmZiJAkJmZmZmZIkDDzMzMzMwiQPb//////yJAKTMzMzMzI0BcZmZmZmYjQI+ZmZmZmSNAwszMzMzMI0D1//////8jQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]},\"y\":{\"__ndarray__\":\"AAAAAAAAAAAJZRANmpTQv2Nvu9MOXNm/1WUhm5w63b/k0JN9rhPev0m1rkhlI92/9BLbUqU227/cGyE6A9DYv1y2vYauQNa/unhAa1i507+tsj4emVXRv2i/9NMdR86/54kGXdhRyr+CMlbVkczGv+nmEV6RssO/YzyIg/P7wL/M0diZ3T69vymNqKq2Jrm/f6ycd6qctb8nqvyHJ4+yv6L1oHZR3K+/xYrwo6JWq7/szchd0XOnvwBNOsaGHaS/S0pfY0VAob/jE+MWQZadvzJRpv3lXpm/N3+TMzPBlb+2eyccYaeSv7x6AD9n/Y+/iNzzaiNui7+zowHnSIWHv3dbRukhK4S/CqTY1lVLgb/kiIJn46h9v+IaxfX+bnm/QolfRFTPdb+EksDU5LNyv6rPAiPWCXC/yTehj/uBa79EXnWiApdnv8Jz18v9OmS/UBDJ53VZYb/8vQNx8sFdvygPpl4hhVm/qNmiueLiVb+5TgtBJsVSv8io+ZERGVC/CuwXse+cS79ht8UD7a5Hv1rdNmM8UES/QEJksj1sQb8CGCslGOM9v1xiiLFsojm/vEob5sn8Nb9/c5VdKNwyv7ib9FaQLTC/e8weE2jBK7906JJNDs8nv9TEmS1lbCS/pUjPbBCFIb+ODwcBGQ8ev+Dw6siLyRm/LjaX9pYfFr+gNHLdH/sSv5nBFtbgSBC/Jm0COHjxC78MHctkd/kHv4Wd09DPkQS/XndujPulAb8TwBvkwUj+vvzxWzrj+/m+fPPg5x9M9r7fQ//aySLzvsn2k+CObPC+h4SkqeQx7L6teyXwuzPovvlHc5KKxuS+qYypu6/V4b7HV7jt/57evs5YUC+tSdq+oURZ2m+R1r7hiEH9AmDTvtBDNChMotC+vkRH0s6PzL5hQvBMiIXIvo1Le5ygDcW+uQxKcV8Twr56eSvK9wm/vlKVHK5jprq+mEyZ98zhtr5kJKXgs6WzvqSLPeTH3rC+Pioekej4rL4YVzgT+uCovuyi2p5TXaW+JPdO4flYor7jX0su04Ofvl8si/hXEZu+q2Et7PQ/l74PbOWe3viTvg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]}},\"selected\":{\"id\":\"1097\"},\"selection_policy\":{\"id\":\"1098\"}},\"id\":\"1084\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1190\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1210\",\"type\":\"ResetTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1144\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1211\",\"type\":\"HelpTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1021\"},{\"id\":\"1022\"},{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1206\"},{\"id\":\"1207\"},{\"id\":\"1208\"},{\"id\":\"1209\"},{\"id\":\"1210\"},{\"id\":\"1211\"}]},\"id\":\"1213\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1152\"}},\"id\":\"1156\",\"type\":\"CDSView\"},{\"attributes\":{\"axis\":{\"id\":\"1066\"},\"dimension\":1,\"ticker\":null},\"id\":\"1069\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1058\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1157\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1007\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"time\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1092\"},\"major_label_policy\":{\"id\":\"1091\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1063\"}},\"id\":\"1062\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1152\"},\"glyph\":{\"id\":\"1153\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1154\"},\"view\":{\"id\":\"1156\"}},\"id\":\"1155\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"x\"},\"renderers\":[{\"id\":\"1038\"}]},\"id\":\"1052\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1159\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1212\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1086\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1022\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1073\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1160\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"1220\"}},\"id\":\"1224\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1063\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1162\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1056\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"1220\"},\"glyph\":{\"id\":\"1221\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1222\"},\"view\":{\"id\":\"1224\"}},\"id\":\"1223\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"AAAAAAAAAACamZmZmZm5P5qZmZmZmck/NDMzMzMz0z+amZmZmZnZPwAAAAAAAOA/MzMzMzMz4z9mZmZmZmbmP5mZmZmZmek/zMzMzMzM7D/////////vP5mZmZmZmfE/MzMzMzMz8z/NzMzMzMz0P2dmZmZmZvY/AQAAAAAA+D+bmZmZmZn5PzUzMzMzM/s/z8zMzMzM/D9pZmZmZmb+PwEAAAAAAABAzszMzMzMAECbmZmZmZkBQGhmZmZmZgJANTMzMzMzA0ACAAAAAAAEQM/MzMzMzARAnJmZmZmZBUBpZmZmZmYGQDYzMzMzMwdAAwAAAAAACEDQzMzMzMwIQJ2ZmZmZmQlAamZmZmZmCkA3MzMzMzMLQAQAAAAAAAxA0czMzMzMDECemZmZmZkNQGtmZmZmZg5AODMzMzMzD0ACAAAAAAAQQGhmZmZmZhBAzszMzMzMEEA0MzMzMzMRQJqZmZmZmRFAAAAAAAAAEkBmZmZmZmYSQMzMzMzMzBJAMjMzMzMzE0CYmZmZmZkTQP7//////xNAZGZmZmZmFEDKzMzMzMwUQDAzMzMzMxVAlpmZmZmZFUD8//////8VQGJmZmZmZhZAyMzMzMzMFkAuMzMzMzMXQJSZmZmZmRdA+v//////F0BgZmZmZmYYQMbMzMzMzBhALDMzMzMzGUCSmZmZmZkZQPj//////xlAXmZmZmZmGkDEzMzMzMwaQCozMzMzMxtAkJmZmZmZG0D2//////8bQFxmZmZmZhxAwszMzMzMHEAoMzMzMzMdQI6ZmZmZmR1A9P//////HUBaZmZmZmYeQMDMzMzMzB5AJjMzMzMzH0CMmZmZmZkfQPL//////x9ALDMzMzMzIEBfZmZmZmYgQJKZmZmZmSBAxczMzMzMIED4//////8gQCszMzMzMyFAXmZmZmZmIUCRmZmZmZkhQMTMzMzMzCFA9///////IUAqMzMzMzMiQF1mZmZmZiJAkJmZmZmZIkDDzMzMzMwiQPb//////yJAKTMzMzMzI0BcZmZmZmYjQI+ZmZmZmSNAwszMzMzMI0D1//////8jQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]},\"y\":{\"__ndarray__\":\"AAAAAAAABECiiiS0f+UDQETachd1ogNADYBo5C9LA0AL+zRVXewCQOF1EUCtjQJA6pUt8I4zAkAB77Z3WeABQOsSA1YRlQFAbeYYW+tRAUA7LqNBohYBQH+nMAeu4gBA6ne34ma1AEDLF5fHGo4AQChHFGUabABAsrnuqMBOAECuTXchdjUAQFAZKnWyHwBA2rBtgPwMAECtAs5I0/n/P3yN/1s53v8/6KEdHYnG/z9ZJroVNrL/P1Mkr+nGoP8/xOKA9tKR/z9V9pcpAIX/P15g2xABev8/c0pLI5Nw/z9uJWxBfWj/P4ejbWaOYf8/QEKigpxb/z8zKceHg1b/P2CNmIkkUv8/IwPFA2VO/z/Tre05Lkv/Pzm/2K1sSP8/7LS4qA9G/z/gojnWCET/PzNzKO1LQv8/ONy/ZM5A/z9vrc40hz//P2wv4JxuPv8/QKKH+n09/z9Kcdicrzz/P1wSQqT+O/8/Folr3WY7/z+Vox+z5Dr/PwhZPhF1Ov8/sa7PUxU6/z94F+42wzn/P6xnxch8Of8/U9NQYEA5/z+W65WQDDn/P371WSDgOP8/LVvkAro4/z8MlY1RmTj/P83GikZ9OP8/xwYmOGU4/z8Yb3qVUDj/P1vZCOI+OP8/M4bwsi84/z/wRHWsIjj/P/vZ5n8XOP8/5urf6Q04/z/1C2KwBTj/P1QIAqL+N/8/e4o4lPg3/z+/sY5i8zf/PxKnve3uN/8/UDPxGus3/z/UgCXT5zf/PzG6rgLlN/8/KbR7mOI3/z+XmveF4Df/P7Ngp77eN/8/S3baN903/z95w2fo2zf/P8/VdMjaN/8/xJFF0dk3/z/QCxP92Df/P+Vq6EbYN/8/YueEqtc3/z89IUIk1zf/P+gn/rDWN/8/vqgITtY3/z8nzhL51Tf/P6FrIbDVN/8/viGBcdU3/z+tMbw71Tf/P6HCkQ3VN/8/M2Tu5dQ3/z+toOXD1Df/P4p4rKbUN/8/AaaUjdQ3/z9NjAh41Df/P0a6h2XUN/8/deujVdQ3/z+tdf5H1Df/P+MTRjzUN/8/6wA1MtQ3/z/pVo8p1Df/Pw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]}},\"selected\":{\"id\":\"1048\"},\"selection_policy\":{\"id\":\"1049\"}},\"id\":\"1035\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1163\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1225\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1074\",\"type\":\"ResetTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1222\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1165\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1070\",\"type\":\"PanTool\"},{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1130\"}],\"center\":[{\"id\":\"1133\"},{\"id\":\"1137\"},{\"id\":\"1168\"}],\"height\":300,\"left\":[{\"id\":\"1134\"}],\"renderers\":[{\"id\":\"1155\"},{\"id\":\"1173\"}],\"title\":{\"id\":\"1157\"},\"toolbar\":{\"id\":\"1145\"},\"toolbar_location\":null,\"width\":300,\"x_range\":{\"id\":\"1122\"},\"x_scale\":{\"id\":\"1126\"},\"y_range\":{\"id\":\"1124\"},\"y_scale\":{\"id\":\"1128\"}},\"id\":\"1121\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"time\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1043\"},\"major_label_policy\":{\"id\":\"1042\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1014\"}},\"id\":\"1013\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1166\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1021\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"1013\"},\"ticker\":null},\"id\":\"1016\",\"type\":\"Grid\"},{\"attributes\":{\"items\":[{\"id\":\"1169\"},{\"id\":\"1188\"}]},\"id\":\"1168\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"red\",\"line_dash\":[6],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1104\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1227\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1138\"},{\"id\":\"1139\"},{\"id\":\"1140\"},{\"id\":\"1141\"},{\"id\":\"1142\"},{\"id\":\"1143\"}]},\"id\":\"1145\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1124\",\"type\":\"DataRange1d\"},{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1062\"}],\"center\":[{\"id\":\"1065\"},{\"id\":\"1069\"},{\"id\":\"1100\"}],\"height\":300,\"left\":[{\"id\":\"1066\"}],\"renderers\":[{\"id\":\"1087\"},{\"id\":\"1105\"}],\"title\":{\"id\":\"1089\"},\"toolbar\":{\"id\":\"1077\"},\"toolbar_location\":null,\"width\":300,\"x_range\":{\"id\":\"1054\"},\"x_scale\":{\"id\":\"1058\"},\"y_range\":{\"id\":\"1056\"},\"y_scale\":{\"id\":\"1060\"}},\"id\":\"1053\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"theta\"},\"renderers\":[{\"id\":\"1155\"}]},\"id\":\"1169\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1228\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"x\":[{\"__ndarray__\":\"mpmZmZmZuT8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[]},{\"__ndarray__\":\"9f//////I0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[]}],\"y\":[0,0]},\"selected\":{\"id\":\"1185\"},\"selection_policy\":{\"id\":\"1186\"}},\"id\":\"1170\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1230\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1122\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1170\"},\"glyph\":{\"id\":\"1171\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1172\"},\"view\":{\"id\":\"1174\"}},\"id\":\"1173\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1231\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"1017\"},\"dimension\":1,\"ticker\":null},\"id\":\"1020\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1233\",\"type\":\"Selection\"},{\"attributes\":{\"line_color\":\"red\",\"line_dash\":[6],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1171\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1005\",\"type\":\"DataRange1d\"},{\"attributes\":{\"items\":[{\"id\":\"1237\"}]},\"id\":\"1236\",\"type\":\"Legend\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"red\",\"line_dash\":[6],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1062\"},\"ticker\":null},\"id\":\"1065\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"omega\"},\"renderers\":[{\"id\":\"1223\"}]},\"id\":\"1237\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1186\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1060\",\"type\":\"LinearScale\"},{\"attributes\":{\"toolbar\":{\"id\":\"1291\"},\"toolbar_location\":\"above\"},\"id\":\"1292\",\"type\":\"ToolbarBox\"},{\"attributes\":{},\"id\":\"1011\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"x\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1046\"},\"major_label_policy\":{\"id\":\"1045\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1018\"}},\"id\":\"1017\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1170\"}},\"id\":\"1174\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1071\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"label\":{\"value\":\"theta_ref\"},\"renderers\":[{\"id\":\"1173\"}]},\"id\":\"1188\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1027\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1192\",\"type\":\"DataRange1d\"},{\"attributes\":{\"label\":{\"value\":\"v_ref\"},\"renderers\":[{\"id\":\"1105\"}]},\"id\":\"1120\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1194\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1196\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1009\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"time\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1228\"},\"major_label_policy\":{\"id\":\"1227\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1199\"}},\"id\":\"1198\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1035\"}},\"id\":\"1039\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"AAAAAAAAAACamZmZmZm5P5qZmZmZmck/NDMzMzMz0z+amZmZmZnZPwAAAAAAAOA/MzMzMzMz4z9mZmZmZmbmP5mZmZmZmek/zMzMzMzM7D/////////vP5mZmZmZmfE/MzMzMzMz8z/NzMzMzMz0P2dmZmZmZvY/AQAAAAAA+D+bmZmZmZn5PzUzMzMzM/s/z8zMzMzM/D9pZmZmZmb+PwEAAAAAAABAzszMzMzMAECbmZmZmZkBQGhmZmZmZgJANTMzMzMzA0ACAAAAAAAEQM/MzMzMzARAnJmZmZmZBUBpZmZmZmYGQDYzMzMzMwdAAwAAAAAACEDQzMzMzMwIQJ2ZmZmZmQlAamZmZmZmCkA3MzMzMzMLQAQAAAAAAAxA0czMzMzMDECemZmZmZkNQGtmZmZmZg5AODMzMzMzD0ACAAAAAAAQQGhmZmZmZhBAzszMzMzMEEA0MzMzMzMRQJqZmZmZmRFAAAAAAAAAEkBmZmZmZmYSQMzMzMzMzBJAMjMzMzMzE0CYmZmZmZkTQP7//////xNAZGZmZmZmFEDKzMzMzMwUQDAzMzMzMxVAlpmZmZmZFUD8//////8VQGJmZmZmZhZAyMzMzMzMFkAuMzMzMzMXQJSZmZmZmRdA+v//////F0BgZmZmZmYYQMbMzMzMzBhALDMzMzMzGUCSmZmZmZkZQPj//////xlAXmZmZmZmGkDEzMzMzMwaQCozMzMzMxtAkJmZmZmZG0D2//////8bQFxmZmZmZhxAwszMzMzMHEAoMzMzMzMdQI6ZmZmZmR1A9P//////HUBaZmZmZmYeQMDMzMzMzB5AJjMzMzMzH0CMmZmZmZkfQPL//////x9ALDMzMzMzIEBfZmZmZmYgQJKZmZmZmSBAxczMzMzMIED4//////8gQCszMzMzMyFAXmZmZmZmIUCRmZmZmZkhQMTMzMzMzCFA9///////IUAqMzMzMzMiQF1mZmZmZiJAkJmZmZmZIkDDzMzMzMwiQPb//////yJAKTMzMzMzI0BcZmZmZmYjQI+ZmZmZmSNAwszMzMzMI0D1//////8jQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]},\"y\":{\"__ndarray__\":\"mpmZmZmZuT+mXk4vWIq3P1NHc8D/t7I/TNQg4NJoqj9MeRhIdhegP/rMf4KTmI0/pamDnSzfUj925UmVuq2Bv5j+h18ZeY+/KRpUNi0XlL+s24sf83eWv8h6UFytX5e/t/P/at05l78VwxH8elyWv2reXYjsCZW/twKOKOtzk7/Mb5mOpr6Rv3dRMriWA5C/uWeqiu2njL+25jR1pnWJv9/NIZ9cfYa/B8OdBZTFg7/NJQGTSFCBvwgvJyPSOH6/MyXdqN1Ner8mHAX+T9d2v5am2LOMy3O/hCk244kgcb/tSsKJoZhtvxubA2unimm/tUNZH2IFZr94JpcaS/hiv4NhwcR6VGC/6csNBiYZXL98fxIAWClYv0lKtKt4xFS/O0G71gTYUb+mGU1WfqdOvxqXY9DyUkq/BJJQOriZRr/LKv6yWGZDv0nCpr6OpkC/4e6XJBaUPL/f7qsQ14U4v4UBUdRxCjW/XSOHujINMr9mL6Hrtfguvw70cr0+kSq/mr3PS7HJJr8oqPsOjosjv1+BWSzqwyC/sN5/gMXCHL+qEZveLKsYv7ns6yZqKBW/egGBpVMlEr8ZXGZa2x8Pv3MGZIxysQq/oYqjzzzlBr+QQvLNQKMDv64z4KjO1wC/LXqvASLk/L6oKKypTcf4vrjGt4FxQPW+S52bb+s58r4yebpmnETvvrQG85v20eq+mmc5mXUB574TRbFM+rvjvq3dlfmy7eC+35SzR0QL3b5VJJt7burYvuNVMPssXtW+2sPUhldT0r6hgtqGLW/Pvqm4/k029sq+2yO105cgx76/+lEe+dbDvp/n3B5UBcG+aZp+K/80vb7ngUGpjw+5vq5pbVQqgbW+yPwXID10sr5E0runnKyvvn8s79sUL6u+NhyYw8RUp76R13LfbwakvpZPiy8sMKG+4s3uqs+Bnb6uxx7mAFSZvtfsDmLTvZW+L5XebsGpkr5Y8pdoVQWQvjj+UU1zgYu+zjhJGrGch767myjOFEWEvipfOhOeZoG+j5dMLEbgfb6v8tVk0qV5vtIaicGYBHa+pcgCkObmcr7sSr8/HDpwvg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]}},\"selected\":{\"id\":\"1165\"},\"selection_policy\":{\"id\":\"1166\"}},\"id\":\"1152\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1014\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1199\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1075\",\"type\":\"HelpTool\"},{\"attributes\":{\"items\":[{\"id\":\"1052\"}]},\"id\":\"1051\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"1198\"},\"ticker\":null},\"id\":\"1201\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"HelpTool\"},{\"attributes\":{\"axis_label\":\"omega\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1231\"},\"major_label_policy\":{\"id\":\"1230\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1203\"}},\"id\":\"1202\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1067\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1018\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1049\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1040\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1203\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1054\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis\":{\"id\":\"1202\"},\"dimension\":1,\"ticker\":null},\"id\":\"1205\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1036\",\"type\":\"Line\"},{\"attributes\":{\"axis_label\":\"v\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1095\"},\"major_label_policy\":{\"id\":\"1094\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1067\"}},\"id\":\"1066\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1024\",\"type\":\"SaveTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1076\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"1027\"}},\"id\":\"1023\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1234\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"x\":{\"__ndarray__\":\"AAAAAAAAAACamZmZmZm5P5qZmZmZmck/NDMzMzMz0z+amZmZmZnZPwAAAAAAAOA/MzMzMzMz4z9mZmZmZmbmP5mZmZmZmek/zMzMzMzM7D/////////vP5mZmZmZmfE/MzMzMzMz8z/NzMzMzMz0P2dmZmZmZvY/AQAAAAAA+D+bmZmZmZn5PzUzMzMzM/s/z8zMzMzM/D9pZmZmZmb+PwEAAAAAAABAzszMzMzMAECbmZmZmZkBQGhmZmZmZgJANTMzMzMzA0ACAAAAAAAEQM/MzMzMzARAnJmZmZmZBUBpZmZmZmYGQDYzMzMzMwdAAwAAAAAACEDQzMzMzMwIQJ2ZmZmZmQlAamZmZmZmCkA3MzMzMzMLQAQAAAAAAAxA0czMzMzMDECemZmZmZkNQGtmZmZmZg5AODMzMzMzD0ACAAAAAAAQQGhmZmZmZhBAzszMzMzMEEA0MzMzMzMRQJqZmZmZmRFAAAAAAAAAEkBmZmZmZmYSQMzMzMzMzBJAMjMzMzMzE0CYmZmZmZkTQP7//////xNAZGZmZmZmFEDKzMzMzMwUQDAzMzMzMxVAlpmZmZmZFUD8//////8VQGJmZmZmZhZAyMzMzMzMFkAuMzMzMzMXQJSZmZmZmRdA+v//////F0BgZmZmZmYYQMbMzMzMzBhALDMzMzMzGUCSmZmZmZkZQPj//////xlAXmZmZmZmGkDEzMzMzMwaQCozMzMzMxtAkJmZmZmZG0D2//////8bQFxmZmZmZhxAwszMzMzMHEAoMzMzMzMdQI6ZmZmZmR1A9P//////HUBaZmZmZmYeQMDMzMzMzB5AJjMzMzMzH0CMmZmZmZkfQPL//////x9ALDMzMzMzIEBfZmZmZmYgQJKZmZmZmSBAxczMzMzMIED4//////8gQCszMzMzMyFAXmZmZmZmIUCRmZmZmZkhQMTMzMzMzCFA9///////IUAqMzMzMzMiQF1mZmZmZiJAkJmZmZmZIkDDzMzMzMwiQPb//////yJAKTMzMzMzI0BcZmZmZmYjQI+ZmZmZmSNAwszMzMzMI0D1//////8jQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]},\"y\":{\"__ndarray__\":\"AAAAAAAAAACkHBWYR83EvypQfAjO48u/kVqCK1bKy7/8gG0nnU3Iv8pS8YutlcO/8zZzTuGWvb/7nVYTyv60vwy8W5cwqKu/ByBKuT1PoL/OoFZnhNCOv6GAAw42/2a/PBQMwv9rdz/qnldqOTeHPwlcMXJaM44/urEQ+pvtkD9ZMlwREZGRP6sZiASoYpE/ddbEyhiqkD8BFeocITmPPzbNZP0YwYw/KdZlx24iij9DGylZUoKHP6mod7kz+YQ//IVaijSWgj9mlLi4zGGAPxbeklyXv3w/SNsEO6AheT8ev2qDz+Z1Px9+lZCrCXM/U2no31CDcD9x+ZeAMJhsP10+9XteuGg/4k3bCflXZT9aEvsimGhiP3sroOqwuV8/te6FbSpRWz9e/azzmoFXP7iiZ1hRN1Q/Zm1/rd5gUT90uSEYrd1NPwSrQyPOp0k/g8B6tG4IRj+1tnct7upCPwYGrDCKPUA/FouRycDgOz+ei8/DfOw3P9sfxnYJhzQ/IMy6jFmcMT/2hZrblTYuP+Sbg+C56ik/Xmio1D47Jj8LWTVywhEjP80wZzgkWyA/svH3digOHD8KVUANSQ8YP/NJ90XYoRQ/ymFDMa2xET/WX7ywg1kOPy80r6VEBwo/RVeoNE5SBj+lXW4dQiQDP5Mpi2MZagA/+1WxiIEm/D72A4tX5yP4PtkL6rbRs/Q+UkIoSjjB8T4eoFvhaXTuPrmRSRnZHuo+mBiGvmhn5j48tl3yhTfjPpSdUGzoeuA+po+Odq5C3D5eA/tXiDrYPsAGMsiOxdQ+i7W/iQTP0T4a3unU6InOPo1TIS3EL8o+j9gSZfl0xj6rhWdlrULDPmrfDBFJhcA+EvGKgQpYvD4QlSEjClG4Po2F9Rj73LQ+K7JLwNLmsT5dv3k0HbmuPq0eSbeHXao+rmNbbH6gpj5B4x42ZWujPi7vwfXdqqA+gsrTG6GcnD4Vfo/TCI+YPjZk8euRFJU+D2Cfr1UYkj6mgU8J0BCPPlaUxT3Uqoo+BEYjA1rkhj6iHPX9wqaDPmwxRHqn3oA+TnxER8L2fD7Rw0EfTd14Pg==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[101]}},\"selected\":{\"id\":\"1233\"},\"selection_policy\":{\"id\":\"1234\"}},\"id\":\"1220\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"toolbars\":[{\"id\":\"1028\"},{\"id\":\"1077\"},{\"id\":\"1145\"},{\"id\":\"1213\"}],\"tools\":[{\"id\":\"1021\"},{\"id\":\"1022\"},{\"id\":\"1023\"},{\"id\":\"1024\"},{\"id\":\"1025\"},{\"id\":\"1026\"},{\"id\":\"1070\"},{\"id\":\"1071\"},{\"id\":\"1072\"},{\"id\":\"1073\"},{\"id\":\"1074\"},{\"id\":\"1075\"},{\"id\":\"1138\"},{\"id\":\"1139\"},{\"id\":\"1140\"},{\"id\":\"1141\"},{\"id\":\"1142\"},{\"id\":\"1143\"},{\"id\":\"1206\"},{\"id\":\"1207\"},{\"id\":\"1208\"},{\"id\":\"1209\"},{\"id\":\"1210\"},{\"id\":\"1211\"}]},\"id\":\"1291\",\"type\":\"ProxyToolbar\"},{\"attributes\":{},\"id\":\"1206\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"AllLabels\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1085\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1084\"},\"glyph\":{\"id\":\"1085\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1086\"},\"view\":{\"id\":\"1088\"}},\"id\":\"1087\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"1035\"},\"glyph\":{\"id\":\"1036\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1037\"},\"view\":{\"id\":\"1039\"}},\"id\":\"1038\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1084\"}},\"id\":\"1088\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1089\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1091\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1092\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1037\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1094\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1095\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"background_fill_color\":\"#fafafa\",\"below\":[{\"id\":\"1013\"}],\"center\":[{\"id\":\"1016\"},{\"id\":\"1020\"},{\"id\":\"1051\"}],\"height\":300,\"left\":[{\"id\":\"1017\"}],\"renderers\":[{\"id\":\"1038\"}],\"title\":{\"id\":\"1040\"},\"toolbar\":{\"id\":\"1028\"},\"toolbar_location\":null,\"width\":300,\"x_range\":{\"id\":\"1005\"},\"x_scale\":{\"id\":\"1009\"},\"y_range\":{\"id\":\"1007\"},\"y_scale\":{\"id\":\"1011\"}},\"id\":\"1004\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1097\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1098\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"1101\"},{\"id\":\"1120\"}]},\"id\":\"1100\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"v\"},\"renderers\":[{\"id\":\"1087\"}]},\"id\":\"1101\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"x\":[{\"__ndarray__\":\"mpmZmZmZuT8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[]},{\"__ndarray__\":\"9f//////I0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[]}],\"y\":[0,0]},\"selected\":{\"id\":\"1117\"},\"selection_policy\":{\"id\":\"1118\"}},\"id\":\"1102\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"red\",\"line_dash\":[6],\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1103\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"1102\"},\"glyph\":{\"id\":\"1103\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1104\"},\"view\":{\"id\":\"1106\"}},\"id\":\"1105\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1102\"}},\"id\":\"1106\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1117\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1118\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1126\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1128\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"time\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1160\"},\"major_label_policy\":{\"id\":\"1159\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1131\"}},\"id\":\"1130\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1130\"},\"ticker\":null},\"id\":\"1133\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"theta\",\"axis_label_text_font_size\":\"12pt\",\"formatter\":{\"id\":\"1163\"},\"major_label_policy\":{\"id\":\"1162\"},\"major_label_text_font_size\":\"12pt\",\"ticker\":{\"id\":\"1135\"}},\"id\":\"1134\",\"type\":\"LinearAxis\"},{\"attributes\":{\"children\":[[{\"id\":\"1004\"},0,0],[{\"id\":\"1053\"},0,1],[{\"id\":\"1121\"},1,0],[{\"id\":\"1189\"},1,1]]},\"id\":\"1290\",\"type\":\"GridBox\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1134\"},\"dimension\":1,\"ticker\":null},\"id\":\"1137\",\"type\":\"Grid\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1153\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1185\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1138\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1139\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1144\"}},\"id\":\"1140\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1141\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1142\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1143\",\"type\":\"HelpTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"line_width\":2,\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1154\",\"type\":\"Line\"}],\"root_ids\":[\"1293\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.1\"}};\n",
       "  var render_items = [{\"docid\":\"1d5ca094-7d1d-4a8c-922b-3d5cbaa9214c\",\"root_ids\":[\"1293\"],\"roots\":{\"1293\":\"3b41d707-17a2-448d-9457-880d06cb2c26\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1293"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from bokeh.io import output_notebook, show\n",
    "from bokeh.plotting import figure\n",
    "from bokeh.layouts import gridplot\n",
    "import numpy as np\n",
    "\n",
    "output_notebook()\n",
    "p_tot = []\n",
    "for state in model.dynamical_state_names:\n",
    "    p = figure(background_fill_color=\"#fafafa\", width=300, height=300)\n",
    "    p.line(x=np.array(sol['t']).squeeze(), y=np.array(sol[state]).squeeze(),\n",
    "           legend_label=state, line_width=2)\n",
    "    for i in range(len(nmpc.quad_stage_cost._references_list)):\n",
    "        if state in nmpc.quad_stage_cost._references_list[i]['names']:\n",
    "            position = nmpc.quad_stage_cost._references_list[i]['names'].index(state)\n",
    "            value = nmpc.quad_stage_cost._references_list[i]['ref'][position]\n",
    "            p.line([np.array(sol['t'][1]).squeeze(), np.array(sol['t'][-1]).squeeze()],\n",
    "                   [value, value], legend_label=state + '_ref',\n",
    "                   line_dash='dashed', line_color=\"red\", line_width=2)\n",
    "\n",
    "    p.yaxis.axis_label = state\n",
    "    p.xaxis.axis_label = 'time'\n",
    "    p.yaxis.axis_label_text_font_size = \"12pt\"\n",
    "    p.yaxis.major_label_text_font_size = \"12pt\"\n",
    "    p.xaxis.major_label_text_font_size = \"12pt\"\n",
    "    p.xaxis.axis_label_text_font_size = \"12pt\"\n",
    "\n",
    "    p_tot.append(p)\n",
    "\n",
    "show(gridplot(p_tot, ncols=2))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}